{
	"info": {
		"_postman_id": "1b52244a-378a-4d8a-bd44-f7dd57797d4b",
		"name": "Asana Test API",
		"description": "My Homework from MA QA Advance courses\nMady by Serj Novitskiy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8d8f3400-fa00-4270-a548-f19d188eb832",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.environment.set(\"auth_token\", pm.cookies.get('auth_token'));",
									"pm.environment.set(\"authentication_token\", pm.cookies.get('xsrf_token'));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Cache-Control",
								"value": "max-age=0"
							},
							{
								"key": "Upgrade-Insecure-Requests",
								"value": "1"
							},
							{
								"key": "Origin",
								"value": "https://app.asana.com"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
							},
							{
								"key": "Accept",
								"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "navigate"
							},
							{
								"key": "Sec-Fetch-User",
								"value": "?1"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "document"
							},
							{
								"key": "Referer",
								"value": "https://app.asana.com/-/login"
							},
							{
								"key": "Accept-Language",
								"value": "ru-UA,ru;q=0.9,uk-UA;q=0.8,uk;q=0.7,en-GB;q=0.6,en;q=0.5,ru-RU;q=0.4,en-US;q=0.3"
							},
							{
								"key": "Cookie",
								"value": "TooBusyRedirectCount=0; lang_pref=en; _gcl_au=1.1.1670115093.1607439332; logged_out_uuid=f1846d4a19f937313fa826ce080693a4; _mkto_trk=id:784-XZD-582&token:_mch-asana.com-1607439333346-31668; _hjid=1a4acbd8-f8bd-4a31-9b71-5ee905f27d97; _fbp=fb.1.1607439333623.1868758328; ivd_snapshot_cookie_gtm=78.137.8.233_false; ivd_session_cookie_gtm=1607439332494; asana_orig_attr=%7B%22source%22%3A%22%22%2C%22query_string%22%3A%22%22%2C%22exit_page%22%3A%22%2Fguide%2Fhelp%2Fapi%2Fapi%22%2C%22landing_page%22%3A%22%2Fguide%2Fhelp%2Fapi%2Fapi%22%2C%22useragent%22%3A%22Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_15_7)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F87.0.4280.88%20Safari%2F537.36%22%2C%22timestamp%22%3A1607439334%2C%22convNum%22%3A425799555%7D; last_domain=1198863918277176; p=0; trusted_device_884ab5c7f313f449453d5b49a4116a6bbb4dbb1e054ff0a675df3c802a018103=b1e92cace3b5b8ddfd068f42ea618f2f; _gaexp=GAX1.2.s1RNc0WmSaOeEMwYbPu5dA.18692.1u00218TIxFP5YSVenl2zCmeOC4w.18665.1u0021eEvdxTFASlyVk753gvHXOw.18669.2; _uetvid=6bfc01c0396511eba056db50f3c8faf5; _ga_J1KDXMCQTH=GS1.1.1607501110.3.1.1607501836.42; user=1198865081898162; TooBusyRedirectCount=0; forced_sidebar_state=expanded; _ga=GA1.2.1567500830.1607439333; forgot_password_email=sergi.novitskiy%40gmail.com; server=prod-ws213.ec2|X9n7R; xsrf_token=d9a5f364f8e50663ea47b4b05c8b321a%3A1608121178241"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "u",
									"value": "https://app.asana.com/?rr=179132",
									"type": "text"
								},
								{
									"key": "i",
									"value": "password",
									"type": "text"
								},
								{
									"key": "src",
									"value": "login",
									"type": "text"
								},
								{
									"key": "xsrf_token",
									"value": "d9a5f364f8e50663ea47b4b05c8b321a:1608121178241",
									"type": "text"
								},
								{
									"key": "oauth_action_url",
									"value": "https://app.asana.com/-/oauth2callback",
									"type": "text"
								},
								{
									"key": "opt_google_email",
									"value": "",
									"type": "text"
								},
								{
									"key": "share_link_key",
									"value": "",
									"type": "text"
								},
								{
									"key": "share_link_domain",
									"value": "",
									"type": "text"
								},
								{
									"key": "recent_saml_email",
									"value": "",
									"type": "text"
								},
								{
									"key": "no_signup",
									"value": "1",
									"type": "text"
								},
								{
									"key": "e",
									"value": "sergi.novitskiy@gmail.com",
									"type": "text"
								},
								{
									"key": "p",
									"value": "5863172392",
									"type": "text"
								},
								{
									"key": "g-recaptcha-enterprise-response",
									"value": "03AGdBq24EHLLmUITnBH8EzX-7gMdR3CJwoNG5G1jUnerpjXJMYeat3WcRi6SEsprLLDlnDX_s-m4CPS9ThMEMyDewf6qHQVhzsQIbdI-uDF2qfTaP8ywVWH_nLDevjSB0CS101BeXcaRQpLDlU0l5cosc7zsKM-2Jr-sa_pFub4hndTog0e9b9NZTa6BPYCSPFbDxPVKmtmjKEmiqMP6k9KZDIEc0j4TWFKM-31MkumMhMGBrIJH5w-VMHBTj1ehbasAgdGgdd0NY_qEV15PkbIKMYmRjPP5052DngJditcb9deqLd7HJJPBly1Ai3FT3hu8RoKRnYyN_rn5YmPWAdhN2LeKr46f-vCcc5dzoe_iubWTXqmoVBtLiQnGuU79HizFLYxyJIweMhWzQ32IA5y32HEGdscLA0F0K0QxhSUxJRwZCK_2tKRTrIlooawrODO-W9WS3ftNmYv-ddq49Fjh6_FhjLZAJoYldhY_QHwJvg_l8r_u--54a6gJTE0Q1pAdujuneyK-0DBXW3ozkRHdidBgvkWDXA8DTMzOre6owJTZbnTeDFV0JeOXLVSsDXZljqS8MylBd1Pfl9uGzuwfYfd-ZELzRRsoDYLyyVoq3ToS6UqWo0dD71Pu63ZqDdeS2-K4W6q9yZv0aUj_2ucUd40q1S86FESCSXF4QCeajUbE2Y8eC80VZj4CSnnp0GWbgehI-bknvm4_Ce1ThCAW1g3p8gjVJYJVaM51aDoxLD1SPvz2E_Fn0c9h0RP07aTl0cA7Bb-4-BVhIjT2bl1nxz1-cCrZt_dBhDzliQTCFW0ANRnKtBCWJoP7x5wrXfZ5Ul3RJtje3VSjStBwU8JFQHHmbBjJYt8NzG75mDqfDimvcmdYqwr0NDYASd0jXzZH4b-ZxNDdcaeZSgopC6UB7iNNIjXG-6gLjaoEISaBZ1oxP7fDxO2vo9pMGqVIv_mavrMYd1zzhihrIexcNBrQI6jnDPDkjG7DrJ1QpFWrDqr1o7Re3pyrYN6uxAE7l7-9o40L6HVjIRJsd1AWN9teaTYZ9si8YbbQ0_flM84YEBn_UCUeCJGNwCtmgKOzqveodgSXJblHjY7wSUUNiz0ZxKT3psjyZYUhHBjoZcxLMtX93pv7g8oo",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "รง{{host}}/app/asana/-/login",
							"host": [
								"รง{{host}}"
							],
							"path": [
								"app",
								"asana",
								"-",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2046d07e-efb1-493b-bfc8-cf55b4d763ad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fa58cb42-9991-4bc0-bbe8-c17efa7c69e9",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/api/1.0/users/me",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get workspaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1890c33f-a0fb-465d-8725-47268bab800a",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"workspace_GID\", jsonData.data[0].gid);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/1.0/workspaces",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get selected workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580ed015-78a3-48dd-9d01-cab664db13ae",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a741b4db-4d95-4999-9072-279a7830087a",
								"exec": [
									"pm.environment.set(\"workspace_gid\", pm.cookies.get('auth_token'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/1.0/workspaces/{{workspace_GID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"workspaces",
								"{{workspace_GID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "QAuth",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/api/1.0/openid_connect/userinfo",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"openid_connect",
								"userinfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Connection",
								"value": "keep-alive"
							},
							{
								"key": "Cache-Control",
								"value": "max-age=0"
							},
							{
								"key": "Upgrade-Insecure-Requests",
								"value": "1"
							},
							{
								"key": "Origin",
								"value": "https://app.asana.com"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "User-Agent",
								"value": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Safari/537.36"
							},
							{
								"key": "Accept",
								"value": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9"
							},
							{
								"key": "Sec-Fetch-Site",
								"value": "same-origin"
							},
							{
								"key": "Sec-Fetch-Mode",
								"value": "navigate"
							},
							{
								"key": "Sec-Fetch-User",
								"value": "?1"
							},
							{
								"key": "Sec-Fetch-Dest",
								"value": "document"
							},
							{
								"key": "Referer",
								"value": "https://app.asana.com/0/home/1198865081898173"
							},
							{
								"key": "Accept-Language",
								"value": "ru-UA,ru;q=0.9,uk-UA;q=0.8,uk;q=0.7,en-GB;q=0.6,en;q=0.5,ru-RU;q=0.4,en-US;q=0.3"
							},
							{
								"key": "Cookie",
								"value": "TooBusyRedirectCount=0; lang_pref=en; _gcl_au=1.1.1670115093.1607439332; logged_out_uuid=f1846d4a19f937313fa826ce080693a4; _mkto_trk=id:784-XZD-582&token:_mch-asana.com-1607439333346-31668; _hjid=1a4acbd8-f8bd-4a31-9b71-5ee905f27d97; _fbp=fb.1.1607439333623.1868758328; ivd_snapshot_cookie_gtm=78.137.8.233_false; ivd_session_cookie_gtm=1607439332494; asana_orig_attr=%7B%22source%22%3A%22%22%2C%22query_string%22%3A%22%22%2C%22exit_page%22%3A%22%2Fguide%2Fhelp%2Fapi%2Fapi%22%2C%22landing_page%22%3A%22%2Fguide%2Fhelp%2Fapi%2Fapi%22%2C%22useragent%22%3A%22Mozilla%2F5.0%20(Macintosh%3B%20Intel%20Mac%20OS%20X%2010_15_7)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F87.0.4280.88%20Safari%2F537.36%22%2C%22timestamp%22%3A1607439334%2C%22convNum%22%3A425799555%7D; last_domain=1198863918277176; p=0; trusted_device_884ab5c7f313f449453d5b49a4116a6bbb4dbb1e054ff0a675df3c802a018103=b1e92cace3b5b8ddfd068f42ea618f2f; _gaexp=GAX1.2.s1RNc0WmSaOeEMwYbPu5dA.18692.1u00218TIxFP5YSVenl2zCmeOC4w.18665.1u0021eEvdxTFASlyVk753gvHXOw.18669.2; _uetvid=6bfc01c0396511eba056db50f3c8faf5; _ga_J1KDXMCQTH=GS1.1.1607501110.3.1.1607501836.42; user=1198865081898162; TooBusyRedirectCount=0; forced_sidebar_state=expanded; _ga=GA1.2.1567500830.1607439333; forgot_password_email=sergi.novitskiy%40gmail.com; xsrf_token=d9a5f364f8e50663ea47b4b05c8b321a%3A1608121178241; auth_token=6562767c9f975d9af53449955c7c52fa; ticket=de7db6f7c6c7115de1626a9846cc12c16499f7af6154a980b06908721a62c82d; is_logged_in=true; trusted_device_2e959bfe66ff6d7039a296c78ca80a9ebab8476d43cc797c44e1c035c064506f=e267de861f72cf80726ce3b0e766af28; server=prod-ws213.ec2|X9n7c"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "_xticket",
									"value": "de7db6f7c6c7115de1626a9846cc12c16499f7af6154a980b06908721a62c82d",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{host}}app/asana/-/logout",
							"host": [
								"{{host}}app"
							],
							"path": [
								"asana",
								"-",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Get multiple workspaces",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aba438c1-3ba7-441b-b49b-09254c181b28",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/1.0/workspaces",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e8a2d396-2f0d-46dd-973d-10e2f38a5069",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1f1d2c51-601f-44d4-a47d-2c7a002aaf67",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"workspace_gid\", jsonData.data[0].gid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/1.0/workspaces/?/workspace_gid=1198865081898169&?opt_fields==followers,assignee&Authorization=Bearer {{authentication_token}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"workspaces",
								""
							],
							"query": [
								{
									"key": "/workspace_gid",
									"value": "1198865081898169"
								},
								{
									"key": "?opt_fields",
									"value": "=followers,assignee"
								},
								{
									"key": "Authorization",
									"value": "Bearer {{authentication_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users in a workspace or organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68315a7e-adfe-49ef-ae6d-7f523c61c202",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"Second_User_GID\", jsonData.data[1].gid);",
									"",
									"pm.test(\"Check that first user is admin\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.data[0].gid).to.contain(pm.environment.get(\"user_gid\"))",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}"
							}
						],
						"url": {
							"raw": "https://app.asana.com/api/1.0/workspaces/{{workspace_GID}}/users",
							"protocol": "https",
							"host": [
								"app",
								"asana",
								"com"
							],
							"path": [
								"api",
								"1.0",
								"workspaces",
								"{{workspace_GID}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "de7b4163-06fb-4068-a49f-c3a677b9eacb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"name\": \"My Company Workspace\"\n  }\n}",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "{{host}}/api/1.0/workspaces/{{workspace_gid}}?Authorization=Bearer {{authentication_token}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"workspaces",
								"{{workspace_gid}}"
							],
							"query": [
								{
									"key": "Authorization",
									"value": "Bearer {{authentication_token}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a user to a workspace or organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f9874fbf-64c9-4925-b85d-3840e991c53d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"user\": \"1199157277590969\"\n  }\n}โบ"
						},
						"url": {
							"raw": "{{host}}/api/1.0/workspaces/{{workspace_GID}}/addUser",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"workspaces",
								"{{workspace_GID}}",
								"addUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a user from a workspace or organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "83ea7150-4b85-4b4e-ac6a-5a3e68069c36",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"user\": \"1199157277590969\"\n  }\n}"
						},
						"url": {
							"raw": "{{host}}/api/1.0/workspaces/{{workspace_GID}}/removeUser",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"workspaces",
								"{{workspace_GID}}",
								"removeUser"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "Get a team",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/1.0/teams/{team_gid}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"teams",
								"{team_gid}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get teams in an organization",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}"
							}
						],
						"url": {
							"raw": "https://app.asana.com/api/1.0/organizations/{{workspace_GID}}/teams",
							"protocol": "https",
							"host": [
								"app",
								"asana",
								"com"
							],
							"path": [
								"api",
								"1.0",
								"organizations",
								"{{workspace_GID}}",
								"teams"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Create a task Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authentication_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"approval_status\": \"pending\",\n    \"assignee\": \"12345\",\n    \"assignee_status\": \"upcoming\",\n    \"completed\": false,\n    \"completed_by\": {\n      \"name\": \"Greg Sanchez\"\n    },\n    \"custom_fields\": {\n      \"4578152156\": \"Not Started\",\n      \"5678904321\": \"On Hold\"\n    },\n    \"due_at\": \"2020-12-15T02:06:58.147Z\",\n    \"due_on\": \"2020-12-15\",\n    \"external\": {\n      \"data\": \"A blob of information\",\n      \"gid\": \"my_gid\"\n    },\n    \"followers\": [\n      \"user_gid\"\n    ],\n    \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n    \"liked\": true,\n    \"name\": \"Buy catnip\",\n    \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n    \"parent\": \"12345\",\n    \"projects\": [\n      \"12345\"\n    ],\n    \"resource_subtype\": \"default_task\",\n    \"start_on\": \"2019-09-14\",\n    \"tags\": [\n      \"12345\"\n    ],\n    \"workspace\": \"{{workspace_GID}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{host}}/tasks?opt_fields=[\"followers\",\"assignee\"]&opt_pretty",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks"
							],
							"query": [
								{
									"key": "opt_fields",
									"value": "[\"followers\",\"assignee\"]",
									"description": "Defines fields to return.\nSome requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.\nThe id of included objects will always be returned, regardless of the field options."
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								},
								{
									"key": "opt_pretty",
									"value": null
								}
							]
						},
						"description": "Creating a new task is as easy as POSTing to the `/tasks` endpoint with a\ndata block containing the fields youโd like to set on the task. Any\nunspecified fields will take on default values.\n\nEvery task is required to be created in a specific workspace, and this\nworkspace cannot be changed once set. The workspace need not be set\nexplicitly if you specify `projects` or a `parent` task instead."
					},
					"response": [
						{
							"name": "Successfully created a new task.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"Buy catnip\",\n        \"assignee\": \"{{assignee}}\",\n        \"assignee_status\": \"upcoming\",\n        \"completed\": false,\n        \"due_at\": \"2012-02-22T02:06:58.147Z\",\n        \"due_on\": \"2012-03-26\",\n        \"external\": {\n            \"gid\": \"my_gid\",\n            \"data\": \"A blob of information\"\n        },\n        \"followers\": [\n            \"12345\"\n        ],\n        \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n        \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n        \"parent\": \"{{parent}}\",\n        \"projects\": [\n            \"12345\"\n        ],\n        \"start_on\": \"2012-03-26\",\n        \"tags\": [\n            \"12345\"\n        ],\n        \"workspace\": \"{{workspace}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": {\n  \"gid\": \"12345\",\n  \"resource_type\": \"task\",\n  \"name\": \"Buy catnip\",\n  \"created_at\": \"2012-02-22T02:06:58.147Z\",\n  \"resource_subtype\": \"default_task\",\n  \"assignee\": {\n   \"gid\": \"12345\",\n   \"resource_type\": \"user\",\n   \"name\": \"Greg Sanchez\"\n  },\n  \"assignee_status\": \"upcoming\",\n  \"completed\": false,\n  \"completed_at\": \"2012-02-22T02:06:58.147Z\",\n  \"custom_fields\": [\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"custom_field\",\n    \"name\": \"Bug Task\",\n    \"resource_subtype\": \"milestone\",\n    \"type\": \"<string>\",\n    \"enum_options\": [\n     {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     }\n    ],\n    \"enum_value\": {\n     \"gid\": \"12345\",\n     \"resource_type\": \"enum_option\",\n     \"name\": \"Low\",\n     \"enabled\": true,\n     \"color\": \"blue\"\n    },\n    \"enabled\": true,\n    \"text_value\": \"Some Value\",\n    \"description\": \"Development team priority\",\n    \"precision\": 2\n   },\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"custom_field\",\n    \"name\": \"Bug Task\",\n    \"resource_subtype\": \"milestone\",\n    \"type\": \"<string>\",\n    \"enum_options\": [\n     {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     }\n    ],\n    \"enum_value\": {\n     \"gid\": \"12345\",\n     \"resource_type\": \"enum_option\",\n     \"name\": \"Low\",\n     \"enabled\": true,\n     \"color\": \"blue\"\n    },\n    \"enabled\": true,\n    \"text_value\": \"Some Value\",\n    \"description\": \"Development team priority\",\n    \"precision\": 2\n   }\n  ],\n  \"dependencies\": [\n   {\n    \"gid\": \"1234\"\n   },\n   {\n    \"gid\": \"4321\"\n   }\n  ],\n  \"dependents\": [\n   {\n    \"gid\": \"1234\"\n   },\n   {\n    \"gid\": \"4321\"\n   }\n  ],\n  \"due_at\": \"2012-02-22T02:06:58.147Z\",\n  \"due_on\": \"2012-03-26\",\n  \"external\": {\n   \"gid\": \"my_gid\",\n   \"data\": \"A blob of information\"\n  },\n  \"followers\": [\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   }\n  ],\n  \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n  \"hearted\": true,\n  \"hearts\": [\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   }\n  ],\n  \"is_rendered_as_separator\": false,\n  \"liked\": true,\n  \"likes\": [\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   }\n  ],\n  \"memberships\": [\n   {\n    \"project\": {\n     \"gid\": \"12345\",\n     \"resource_type\": \"project\",\n     \"name\": \"Stuff to buy\"\n    },\n    \"section\": {\n     \"gid\": \"12345\",\n     \"resource_type\": \"section\",\n     \"name\": \"Next Actions\"\n    }\n   },\n   {\n    \"project\": {\n     \"gid\": \"12345\",\n     \"resource_type\": \"project\",\n     \"name\": \"Stuff to buy\"\n    },\n    \"section\": {\n     \"gid\": \"12345\",\n     \"resource_type\": \"section\",\n     \"name\": \"Next Actions\"\n    }\n   }\n  ],\n  \"modified_at\": \"2012-02-22T02:06:58.147Z\",\n  \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n  \"num_hearts\": 5,\n  \"num_likes\": 5,\n  \"num_subtasks\": 3,\n  \"parent\": {\n   \"gid\": \"12345\",\n   \"resource_type\": \"task\",\n   \"name\": \"Bug Task\"\n  },\n  \"projects\": [\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"project\",\n    \"name\": \"Stuff to buy\"\n   },\n   {\n    \"gid\": \"12345\",\n    \"resource_type\": \"project\",\n    \"name\": \"Stuff to buy\"\n   }\n  ],\n  \"start_on\": \"2012-03-26\",\n  \"tags\": [\n   {\n    \"gid\": \"59746\",\n    \"name\": \"Grade A\"\n   }\n  ],\n  \"workspace\": {\n   \"gid\": \"12345\",\n   \"resource_type\": \"workspace\",\n   \"name\": \"Bug Task\"\n  }\n }\n}"
						},
						{
							"name": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"Buy catnip\",\n        \"assignee\": \"{{assignee}}\",\n        \"assignee_status\": \"upcoming\",\n        \"completed\": false,\n        \"due_at\": \"2012-02-22T02:06:58.147Z\",\n        \"due_on\": \"2012-03-26\",\n        \"external\": {\n            \"gid\": \"my_gid\",\n            \"data\": \"A blob of information\"\n        },\n        \"followers\": [\n            \"12345\"\n        ],\n        \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n        \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n        \"parent\": \"{{parent}}\",\n        \"projects\": [\n            \"12345\"\n        ],\n        \"start_on\": \"2012-03-26\",\n        \"tags\": [\n            \"12345\"\n        ],\n        \"workspace\": \"{{workspace}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"Buy catnip\",\n        \"assignee\": \"{{assignee}}\",\n        \"assignee_status\": \"upcoming\",\n        \"completed\": false,\n        \"due_at\": \"2012-02-22T02:06:58.147Z\",\n        \"due_on\": \"2012-03-26\",\n        \"external\": {\n            \"gid\": \"my_gid\",\n            \"data\": \"A blob of information\"\n        },\n        \"followers\": [\n            \"12345\"\n        ],\n        \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n        \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n        \"parent\": \"{{parent}}\",\n        \"projects\": [\n            \"12345\"\n        ],\n        \"start_on\": \"2012-03-26\",\n        \"tags\": [\n            \"12345\"\n        ],\n        \"workspace\": \"{{workspace}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "There was a problem on Asanaโs end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"Buy catnip\",\n        \"assignee\": \"{{assignee}}\",\n        \"assignee_status\": \"upcoming\",\n        \"completed\": false,\n        \"due_at\": \"2012-02-22T02:06:58.147Z\",\n        \"due_on\": \"2012-03-26\",\n        \"external\": {\n            \"gid\": \"my_gid\",\n            \"data\": \"A blob of information\"\n        },\n        \"followers\": [\n            \"12345\"\n        ],\n        \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n        \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n        \"parent\": \"{{parent}}\",\n        \"projects\": [\n            \"12345\"\n        ],\n        \"start_on\": \"2012-03-26\",\n        \"tags\": [\n            \"12345\"\n        ],\n        \"workspace\": \"{{workspace}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"Buy catnip\",\n        \"assignee\": \"{{assignee}}\",\n        \"assignee_status\": \"upcoming\",\n        \"completed\": false,\n        \"due_at\": \"2012-02-22T02:06:58.147Z\",\n        \"due_on\": \"2012-03-26\",\n        \"external\": {\n            \"gid\": \"my_gid\",\n            \"data\": \"A blob of information\"\n        },\n        \"followers\": [\n            \"12345\"\n        ],\n        \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n        \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n        \"parent\": \"{{parent}}\",\n        \"projects\": [\n            \"12345\"\n        ],\n        \"start_on\": \"2012-03-26\",\n        \"tags\": [\n            \"12345\"\n        ],\n        \"workspace\": \"{{workspace}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"data\": {\n        \"name\": \"Buy catnip\",\n        \"assignee\": \"{{assignee}}\",\n        \"assignee_status\": \"upcoming\",\n        \"completed\": false,\n        \"due_at\": \"2012-02-22T02:06:58.147Z\",\n        \"due_on\": \"2012-03-26\",\n        \"external\": {\n            \"gid\": \"my_gid\",\n            \"data\": \"A blob of information\"\n        },\n        \"followers\": [\n            \"12345\"\n        ],\n        \"html_notes\": \"<body>Mittens <em>really</em> likes the stuff from Humboldt.</body>\",\n        \"notes\": \"Mittens really likes the stuff from Humboldt.\",\n        \"parent\": \"{{parent}}\",\n        \"projects\": [\n            \"12345\"\n        ],\n        \"start_on\": \"2012-03-26\",\n        \"tags\": [\n            \"12345\"\n        ],\n        \"workspace\": \"{{workspace}}\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/tasks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a task",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/api/1.0/tasks/{task_gid}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"tasks",
								"{task_gid}"
							]
						},
						"description": "Returns the compact records for all attachments on the task."
					},
					"response": [
						{
							"name": "There was a problem on Asanaโs end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully retrieved the compact records for all attachments on the task.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"attachment\",\n   \"name\": \"Screenshot.png\"\n  },\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"attachment\",\n   \"name\": \"Screenshot.png\"\n  }\n ]\n}"
						},
						{
							"name": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get multiple tasks",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}"
							}
						],
						"url": {
							"raw": "{{host}}/api/1.0/tasks",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search tasks in a workspace",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authentication_token}}"
							}
						],
						"url": {
							"raw": "https://app.asana.com/api/1.0/workspaces/{{workspace_GID}}/tasks/search",
							"protocol": "https",
							"host": [
								"app",
								"asana",
								"com"
							],
							"path": [
								"api",
								"1.0",
								"workspaces",
								"{{workspace_GID}}",
								"tasks",
								"search"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Get projects a task is in",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/1.0/tasks/:task_gid/projects",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"tasks",
								":task_gid",
								"projects"
							],
							"variable": [
								{
									"key": "task_gid",
									"value": "{{task}}",
									"description": "The task to operate on."
								}
							]
						},
						"description": "Returns a compact representation of all of the projects the task is in."
					},
					"response": [
						{
							"name": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully retrieved the projects for the given task.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"project\",\n   \"name\": \"Stuff to buy\",\n   \"created_at\": \"2012-02-22T02:06:58.147Z\",\n   \"archived\": false,\n   \"color\": \"light-green\",\n   \"current_status\": {\n    \"color\": \"green\",\n    \"text\": \"Everything is great\",\n    \"author\": {\n     \"gid\": \"12345\",\n     \"name\": \"Greg Bizarro\"\n    }\n   },\n   \"custom_fields\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    }\n   ],\n   \"custom_field_settings\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    }\n   ],\n   \"due_date\": \"2012-03-26\",\n   \"due_on\": \"2012-03-26\",\n   \"followers\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"html_notes\": \"These are things we need to purchase.\",\n   \"is_template\": false,\n   \"layout\": \"<string>\",\n   \"members\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"modified_at\": \"2012-02-22T02:06:58.147Z\",\n   \"notes\": \"These are things we need to purchase.\",\n   \"owner\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"public\": false,\n   \"section_migration_status\": \"not_migrated\",\n   \"start_on\": \"2012-03-26\",\n   \"team\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"team\",\n    \"name\": \"Bug Task\"\n   },\n   \"workspace\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"workspace\",\n    \"name\": \"Bug Task\"\n   }\n  },\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"project\",\n   \"name\": \"Stuff to buy\",\n   \"created_at\": \"2012-02-22T02:06:58.147Z\",\n   \"archived\": false,\n   \"color\": \"light-green\",\n   \"current_status\": {\n    \"color\": \"green\",\n    \"text\": \"Everything is great\",\n    \"author\": {\n     \"gid\": \"12345\",\n     \"name\": \"Greg Bizarro\"\n    }\n   },\n   \"custom_fields\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    }\n   ],\n   \"custom_field_settings\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    }\n   ],\n   \"due_date\": \"2012-03-26\",\n   \"due_on\": \"2012-03-26\",\n   \"followers\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"html_notes\": \"These are things we need to purchase.\",\n   \"is_template\": false,\n   \"layout\": \"<string>\",\n   \"members\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"modified_at\": \"2012-02-22T02:06:58.147Z\",\n   \"notes\": \"These are things we need to purchase.\",\n   \"owner\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"public\": false,\n   \"section_migration_status\": \"not_migrated\",\n   \"start_on\": \"2012-03-26\",\n   \"team\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"team\",\n    \"name\": \"Bug Task\"\n   },\n   \"workspace\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"workspace\",\n    \"name\": \"Bug Task\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "There was a problem on Asanaโs end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get events on a resource Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authentication_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/api/1.0/events?resource=12345",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"1.0",
								"events"
							],
							"query": [
								{
									"key": "resource",
									"value": "12345",
									"description": "A resource ID to subscribe to. The resource can be a task or project."
								}
							]
						},
						"description": "Returns the full record for all events that have occurred since the sync\ntoken was created.\n\nA GET request to the endpoint /[path_to_resource]/events can be made in\nlieu of including the resource ID in the data for the request."
					},
					"response": [
						{
							"name": "There was a problem on Asanaโs end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully retrieved events.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"user\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"resource\": {\n    \"gid\": \"12345\",\n    \"name\": \"Bug Task\"\n   },\n   \"type\": \"task\",\n   \"action\": \"changed\",\n   \"parent\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"task\",\n    \"name\": \"Bug Task\"\n   },\n   \"created_at\": \"2012-02-22T02:06:58.147Z\"\n  },\n  {\n   \"user\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"resource\": {\n    \"gid\": \"12345\",\n    \"name\": \"Bug Task\"\n   },\n   \"type\": \"task\",\n   \"action\": \"changed\",\n   \"parent\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"task\",\n    \"name\": \"Bug Task\"\n   },\n   \"created_at\": \"2012-02-22T02:06:58.147Z\"\n  }\n ],\n \"sync\": \"de4774f6915eae04714ca93bb2f5ee81\"\n}"
						},
						{
							"name": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}