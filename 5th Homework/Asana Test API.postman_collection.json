{
	"info": {
		"_postman_id": "1b52244a-378a-4d8a-bd44-f7dd57797d4b",
		"name": "Asana Test API",
		"description": "My Homework from MA QA Advance courses\nMady by Serj Novitskiy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Get User",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2046d07e-efb1-493b-bfc8-cf55b4d763ad",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "fa58cb42-9991-4bc0-bbe8-c17efa7c69e9",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"user_gid\", jsonData.data.gid)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/me",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get workspaces",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workspaces",
							"host": [
								"{{host}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get selected workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "580ed015-78a3-48dd-9d01-cab664db13ae",
								"exec": [
									"const asana = require('asana');",
									"",
									"const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');",
									"",
									"client.workspaces.getWorkspace(workspaceGid, {param: \"value\", param: \"value\", opt_pretty: true})",
									"    .then((result) => {",
									"        console.log(result);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workspaces/{workspace_gid}",
							"host": [
								"{{host}}"
							],
							"path": [
								"workspaces",
								"{workspace_gid}"
							]
						}
					},
					"response": []
				},
				{
					"name": "QAuth",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/openid_connect/userinfo",
							"host": [
								"{{host}}"
							],
							"path": [
								"openid_connect",
								"userinfo"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Workspaces",
			"item": [
				{
					"name": "Get multiple workspaces",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "aba438c1-3ba7-441b-b49b-09254c181b28",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "1/1198865081898162:31fe87a06f1e02ed31ca385007329854",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workspaces",
							"host": [
								"{{host}}"
							],
							"path": [
								"workspaces"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "e8a2d396-2f0d-46dd-973d-10e2f38a5069",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1f1d2c51-601f-44d4-a47d-2c7a002aaf67",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"workspace_gid\", jsonData.data[0].gid);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "1/1198865081898162:31fe87a06f1e02ed31ca385007329854",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/workspaces/?/workspace_gid=1198865081898169&?opt_fields==followers,assignee",
							"host": [
								"{{host}}"
							],
							"path": [
								"workspaces",
								""
							],
							"query": [
								{
									"key": "/workspace_gid",
									"value": "1198865081898169"
								},
								{
									"key": "?opt_pretty",
									"value": null,
									"disabled": true
								},
								{
									"key": "?opt_fields",
									"value": "=followers,assignee"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a workspace",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "de7b4163-06fb-4068-a49f-c3a677b9eacb",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"name\": \"My Company Workspace\"\n  }\n}"
						},
						"url": {
							"raw": "{{host}}/workspaces/{{workspace_gid}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"workspaces",
								"{{workspace_gid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a user to a workspace or organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f9874fbf-64c9-4925-b85d-3840e991c53d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n\n    \"user\": \"{{user_gid}}\"\n  }\n}â€º"
						},
						"url": {
							"raw": "{{host}}/workspaces/{{workspace_gid}}/addUser",
							"host": [
								"{{host}}"
							],
							"path": [
								"workspaces",
								"{{workspace_gid}}",
								"addUser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove a user from a workspace or organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "83ea7150-4b85-4b4e-ac6a-5a3e68069c36",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"user\": \"{{user_gid}}\"\n  }\n}"
						},
						"url": {
							"raw": "{{host}}/workspaces/{{workspace_gid}}/removeUser",
							"host": [
								"{{host}}"
							],
							"path": [
								"workspaces",
								"{{workspace_gid}}",
								"removeUser"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Teams",
			"item": [
				{
					"name": "Get a team",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/teams/{team_gid}",
							"host": [
								"{{host}}"
							],
							"path": [
								"teams",
								"{team_gid}"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Get attachments for a task",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/tasks/:task_gid/attachments",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								":task_gid",
								"attachments"
							],
							"variable": [
								{
									"description": "The task to operate on.",
									"key": "task_gid",
									"value": "{{task}}"
								}
							]
						},
						"description": "Returns the compact records for all attachments on the task."
					},
					"response": [
						{
							"name": "There was a problem on Asanaâ€™s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully retrieved the compact records for all attachments on the task.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"attachment\",\n   \"name\": \"Screenshot.png\"\n  },\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"attachment\",\n   \"name\": \"Screenshot.png\"\n  }\n ]\n}"
						},
						{
							"name": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"attachments"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Get projects a task is in",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "tokenType",
									"value": "",
									"type": "string"
								},
								{
									"key": "accessToken",
									"value": "{{authentication_token}}",
									"type": "string"
								},
								{
									"key": "addTokenTo",
									"value": "header",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/tasks/:task_gid/projects",
							"host": [
								"{{host}}"
							],
							"path": [
								"tasks",
								":task_gid",
								"projects"
							],
							"variable": [
								{
									"key": "task_gid",
									"value": "{{task}}",
									"description": "The task to operate on."
								}
							]
						},
						"description": "Returns a compact representation of all of the projects the task is in."
					},
					"response": [
						{
							"name": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully retrieved the projects for the given task.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"project\",\n   \"name\": \"Stuff to buy\",\n   \"created_at\": \"2012-02-22T02:06:58.147Z\",\n   \"archived\": false,\n   \"color\": \"light-green\",\n   \"current_status\": {\n    \"color\": \"green\",\n    \"text\": \"Everything is great\",\n    \"author\": {\n     \"gid\": \"12345\",\n     \"name\": \"Greg Bizarro\"\n    }\n   },\n   \"custom_fields\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    }\n   ],\n   \"custom_field_settings\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    }\n   ],\n   \"due_date\": \"2012-03-26\",\n   \"due_on\": \"2012-03-26\",\n   \"followers\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"html_notes\": \"These are things we need to purchase.\",\n   \"is_template\": false,\n   \"layout\": \"<string>\",\n   \"members\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"modified_at\": \"2012-02-22T02:06:58.147Z\",\n   \"notes\": \"These are things we need to purchase.\",\n   \"owner\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"public\": false,\n   \"section_migration_status\": \"not_migrated\",\n   \"start_on\": \"2012-03-26\",\n   \"team\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"team\",\n    \"name\": \"Bug Task\"\n   },\n   \"workspace\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"workspace\",\n    \"name\": \"Bug Task\"\n   }\n  },\n  {\n   \"gid\": \"12345\",\n   \"resource_type\": \"project\",\n   \"name\": \"Stuff to buy\",\n   \"created_at\": \"2012-02-22T02:06:58.147Z\",\n   \"archived\": false,\n   \"color\": \"light-green\",\n   \"current_status\": {\n    \"color\": \"green\",\n    \"text\": \"Everything is great\",\n    \"author\": {\n     \"gid\": \"12345\",\n     \"name\": \"Greg Bizarro\"\n    }\n   },\n   \"custom_fields\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field\",\n     \"name\": \"Bug Task\",\n     \"resource_subtype\": \"milestone\",\n     \"type\": \"<string>\",\n     \"enum_options\": [\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      },\n      {\n       \"gid\": \"12345\",\n       \"resource_type\": \"enum_option\",\n       \"name\": \"Low\",\n       \"enabled\": true,\n       \"color\": \"blue\"\n      }\n     ],\n     \"enum_value\": {\n      \"gid\": \"12345\",\n      \"resource_type\": \"enum_option\",\n      \"name\": \"Low\",\n      \"enabled\": true,\n      \"color\": \"blue\"\n     },\n     \"enabled\": true,\n     \"text_value\": \"Some Value\"\n    }\n   ],\n   \"custom_field_settings\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"custom_field_setting\"\n    }\n   ],\n   \"due_date\": \"2012-03-26\",\n   \"due_on\": \"2012-03-26\",\n   \"followers\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"html_notes\": \"These are things we need to purchase.\",\n   \"is_template\": false,\n   \"layout\": \"<string>\",\n   \"members\": [\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    },\n    {\n     \"gid\": \"12345\",\n     \"resource_type\": \"user\",\n     \"name\": \"Greg Sanchez\"\n    }\n   ],\n   \"modified_at\": \"2012-02-22T02:06:58.147Z\",\n   \"notes\": \"These are things we need to purchase.\",\n   \"owner\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"public\": false,\n   \"section_migration_status\": \"not_migrated\",\n   \"start_on\": \"2012-03-26\",\n   \"team\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"team\",\n    \"name\": \"Bug Task\"\n   },\n   \"workspace\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"workspace\",\n    \"name\": \"Bug Task\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "There was a problem on Asanaâ€™s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/tasks/{{task}}/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tasks",
										"{{task}}",
										"projects"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get events on a resource Copy",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{authentication_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/events?resource=12345",
							"host": [
								"{{host}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "resource",
									"value": "12345",
									"description": "A resource ID to subscribe to. The resource can be a task or project."
								}
							]
						},
						"description": "Returns the full record for all events that have occurred since the sync\ntoken was created.\n\nA GET request to the endpoint /[path_to_resource]/events can be made in\nlieu of including the resource ID in the data for the request."
					},
					"response": [
						{
							"name": "There was a problem on Asanaâ€™s end. In the event of a server error the response body should contain an error phrase. These phrases can be used by Asana support to quickly look up the incident that caused the server error. Some errors are due to server load, and will not supply an error phrase.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Successfully retrieved events.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"data\": [\n  {\n   \"user\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"resource\": {\n    \"gid\": \"12345\",\n    \"name\": \"Bug Task\"\n   },\n   \"type\": \"task\",\n   \"action\": \"changed\",\n   \"parent\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"task\",\n    \"name\": \"Bug Task\"\n   },\n   \"created_at\": \"2012-02-22T02:06:58.147Z\"\n  },\n  {\n   \"user\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"user\",\n    \"name\": \"Greg Sanchez\"\n   },\n   \"resource\": {\n    \"gid\": \"12345\",\n    \"name\": \"Bug Task\"\n   },\n   \"type\": \"task\",\n   \"action\": \"changed\",\n   \"parent\": {\n    \"gid\": \"12345\",\n    \"resource_type\": \"task\",\n    \"name\": \"Bug Task\"\n   },\n   \"created_at\": \"2012-02-22T02:06:58.147Z\"\n  }\n ],\n \"sync\": \"de4774f6915eae04714ca93bb2f5ee81\"\n}"
						},
						{
							"name": "A valid authentication token was not provided with the request, so the API could not associate a user with the request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "Either the request method and path supplied do not specify a known action in the API, or the object specified by the request does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						},
						{
							"name": "The authentication and request syntax was valid but the server is refusing to complete the request. This can happen if you try to read or write to objects or properties that the user does not have access to.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?resource=12345",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "resource",
											"value": "12345"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errors\": [\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  },\n  {\n   \"message\": \"project: Missing input\",\n   \"help\": \"For more information on API status codes and how to handle them, read the docs on errors: https://asana.github.io/developer-docs/#errors'\",\n   \"phrase\": \"6 sad squid snuggle softly\"\n  }\n ]\n}"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}